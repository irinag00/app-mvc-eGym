// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eGym.Models;

#nullable disable

namespace eGym.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("eGym.Models.Categoria", b =>
                {
                    b.Property<int>("idCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idCategoria"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idCategoria");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("eGym.Models.Color", b =>
                {
                    b.Property<int>("idColor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idColor"));

                    b.Property<string>("imagenColor")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idColor");

                    b.ToTable("Colores");
                });

            modelBuilder.Entity("eGym.Models.Marca", b =>
                {
                    b.Property<int>("idMarca")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idMarca"));

                    b.Property<string>("imagenMarca")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resumen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idMarca");

                    b.ToTable("Marcas");
                });

            modelBuilder.Entity("eGym.Models.Ropa", b =>
                {
                    b.Property<int>("idRopa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idRopa"));

                    b.Property<int>("categoriaId")
                        .HasColumnType("int");

                    b.Property<string>("detalles")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imagenRopa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("marcaId")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("precio")
                        .HasColumnType("float");

                    b.Property<int>("tiendaId")
                        .HasColumnType("int");

                    b.HasKey("idRopa");

                    b.HasIndex("categoriaId");

                    b.HasIndex("marcaId");

                    b.HasIndex("tiendaId");

                    b.ToTable("Ropas");
                });

            modelBuilder.Entity("eGym.Models.Ropa_Color", b =>
                {
                    b.Property<int>("idRopa")
                        .HasColumnType("int");

                    b.Property<int>("idColor")
                        .HasColumnType("int");

                    b.HasKey("idRopa", "idColor");

                    b.HasIndex("idColor");

                    b.ToTable("Ropa_Colores");
                });

            modelBuilder.Entity("eGym.Models.Tienda", b =>
                {
                    b.Property<int>("idTienda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("idTienda"));

                    b.Property<string>("imagenTienda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("resumen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idTienda");

                    b.ToTable("Tiendas");
                });

            modelBuilder.Entity("eGym.Models.Ropa", b =>
                {
                    b.HasOne("eGym.Models.Categoria", "Categoria")
                        .WithMany("Ropas")
                        .HasForeignKey("categoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eGym.Models.Marca", "Marca")
                        .WithMany("Ropas")
                        .HasForeignKey("marcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eGym.Models.Tienda", "Tienda")
                        .WithMany("Ropas")
                        .HasForeignKey("tiendaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");

                    b.Navigation("Marca");

                    b.Navigation("Tienda");
                });

            modelBuilder.Entity("eGym.Models.Ropa_Color", b =>
                {
                    b.HasOne("eGym.Models.Color", "color")
                        .WithMany("ropas_colores")
                        .HasForeignKey("idColor")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("eGym.Models.Ropa", "ropa")
                        .WithMany("ropas_colores")
                        .HasForeignKey("idRopa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("color");

                    b.Navigation("ropa");
                });

            modelBuilder.Entity("eGym.Models.Categoria", b =>
                {
                    b.Navigation("Ropas");
                });

            modelBuilder.Entity("eGym.Models.Color", b =>
                {
                    b.Navigation("ropas_colores");
                });

            modelBuilder.Entity("eGym.Models.Marca", b =>
                {
                    b.Navigation("Ropas");
                });

            modelBuilder.Entity("eGym.Models.Ropa", b =>
                {
                    b.Navigation("ropas_colores");
                });

            modelBuilder.Entity("eGym.Models.Tienda", b =>
                {
                    b.Navigation("Ropas");
                });
#pragma warning restore 612, 618
        }
    }
}
